# use docker-compose up -d to start the network
# version 3 does not support setting memory limits for docker-compose
version: '2'
services:
  notary-node:
    image: corda/corda-zulu-java1.8-4.7:latest
    # hostnames need to be the same as in build.gradle, because they are baked into nodeInfo files
    hostname: notary-node
    mem_limit: 1g
    expose:
      - 10002 # p2p port
      - 10003 # Corda RPC port, map to a host port using ports directive if Corda shell access is required
    volumes:
      - ./build/nodes/Notary/certificates:/opt/corda/certificates
      - ./build/nodes/runnodes:/opt/corda/runnodes
      - ./build/nodes/Notary/corda.jar:/opt/corda/corda.jar
      - ./build/nodes/Notary/cordapps:/opt/corda/cordapps
      - ./build/nodes/Notary/etc:/etc/corda
      - ./build/nodes/Notary/network-parameters:/opt/corda/network-parameters
      - ./build/nodes/Notary/logs:/opt/corda/logs
      - ./build/nodes/Notary/drivers:/opt/corda/drivers
      - ./build/nodes/Notary/persistence:/opt/corda/persistence
      - ./build/nodes/Notary/additional-node-infos:/opt/corda/additional-node-infos
      # the following makes deployNode dir layout compatible with the expectations of the docker image
      - ./build/nodes/Notary/persistence.mv.db:/opt/corda/persistence/persistence.mv.db
      - ./build/nodes/Notary/persistence.trace.db:/opt/corda/persistence/persistence.trace.db
      - ./build/nodes/Notary/node.conf:/opt/corda/node.conf
    command: /opt/corda/runnodes
  partya-node:
    image: corda/corda-zulu-java1.8-4.7:latest
    # hostnames need to be the same as in build.gradle, because they are baked into nodeInfo files
    hostname: partya-node
    mem_limit: 1g
    expose:
      - 10004 # p2p port
      - 10005 # Corda RPC port, map to a host port using ports directive if Corda shell access is required
    volumes:
      - ./build/nodes/PartyA/certificates:/opt/corda/certificates
      - ./build/nodes/runnodes:/opt/corda/runnodes
      - ./build/nodes/PartyA/corda.jar:/opt/corda/corda.jar
      - ./build/nodes/PartyA/cordapps:/opt/corda/cordapps
      - ./build/nodes/PartyA/etc:/etc/corda
      - ./build/nodes/PartyA/network-parameters:/opt/corda/network-parameters
      - ./build/nodes/PartyA/logs:/opt/corda/logs
      - ./build/nodes/PartyA/drivers:/opt/corda/drivers
      - ./build/nodes/PartyA/persistence:/opt/corda/persistence
      - ./build/nodes/PartyA/additional-node-infos:/opt/corda/additional-node-infos
      # the following makes deployNode dir layout compatible with the expectations of the docker image
      - ./build/nodes/PartyA/persistence.mv.db:/opt/corda/persistence/persistence.mv.db
      - ./build/nodes/PartyA/persistence.trace.db:/opt/corda/persistence/persistence.trace.db
      - ./build/nodes/PartyA/node.conf:/opt/corda/node.conf
    command: /opt/corda/runnodes
  partyb-node:
    image: corda/corda-zulu-java1.8-4.7:latest
    # hostnames need to be the same as in build.gradle, because they are baked into nodeInfo files
    hostname: partyb-node
    mem_limit: 1g
    expose:
      - 10006 # p2p port
      - 10007 # Corda RPC port, map to a host port using ports directive if Corda shell access is required
    volumes:
      - ./build/nodes/PartyB/certificates:/opt/corda/certificates
      - ./build/nodes/runnodes:/opt/corda/runnodes
      - ./build/nodes/PartyB/corda.jar:/opt/corda/corda.jar
      - ./build/nodes/PartyB/cordapps:/opt/corda/cordapps
      - ./build/nodes/PartyB/etc:/etc/corda
      - ./build/nodes/PartyB/network-parameters:/opt/corda/network-parameters
      - ./build/nodes/PartyB/logs:/opt/corda/logs
      - ./build/nodes/PartyB/drivers:/opt/corda/drivers
      - ./build/nodes/PartyB/persistence:/opt/corda/persistence
      - ./build/nodes/PartyB/additional-node-infos:/opt/corda/additional-node-infos
      # the following makes deployNode dir layout compatible with the expectations of the docker image
      - ./build/nodes/PartyB/persistence.mv.db:/opt/corda/persistence/persistence.mv.db
      - ./build/nodes/PartyB/persistence.trace.db:/opt/corda/persistence/persistence.trace.db
      - ./build/nodes/PartyB/node.conf:/opt/corda/node.conf
    command: /opt/corda/runnodes
  partyc-node:
    image: corda/corda-zulu-java1.8-4.7:latest
    # hostnames need to be the same as in build.gradle, because they are baked into nodeInfo files
    hostname: partyc-node
    mem_limit: 1g
    expose:
      - 10008 # p2p port
      - 10009 # Corda RPC port, map to a host port using ports directive if Corda shell access is required
    volumes:
      - ./build/nodes/PartyC/certificates:/opt/corda/certificates
      - ./build/nodes/runnodes:/opt/corda/runnodes
      - ./build/nodes/PartyC/corda.jar:/opt/corda/corda.jar
      - ./build/nodes/PartyC/cordapps:/opt/corda/cordapps
      - ./build/nodes/PartyC/etc:/etc/corda
      - ./build/nodes/PartyC/network-parameters:/opt/corda/network-parameters
      - ./build/nodes/PartyC/logs:/opt/corda/logs
      - ./build/nodes/PartyC/drivers:/opt/corda/drivers
      - ./build/nodes/PartyC/persistence:/opt/corda/persistence
      - ./build/nodes/PartyC/additional-node-infos:/opt/corda/additional-node-infos
      # the following makes deployNode dir layout compatible with the expectations of the docker image
      - ./build/nodes/PartyC/persistence.mv.db:/opt/corda/persistence/persistence.mv.db
      - ./build/nodes/PartyC/persistence.trace.db:/opt/corda/persistence/persistence.trace.db
      - ./build/nodes/PartyC/node.conf:/opt/corda/node.conf
    command: /opt/corda/runnodes
