plugins {
    id 'com.r3.conclave.enclave'
}

dependencies {
    implementation "com.r3.conclave:conclave-enclave"
    implementation 'org.jetbrains:annotations:19.0.0'
    testImplementation "com.r3.conclave:conclave-testing"
    testImplementation "org.junit.jupiter:junit-jupiter:5.6.0"
    compile 'org.apache.commons:commons-lang3:3.5'
    compile 'org.apache.avro:avro:1.10.2'
}

conclave {
    productID = 1
    revocationLevel = 0

    simulation {
        signingType = privateKey
        signingKey = file("../signing/sample_private_key.pem")
    }

    debug {
        signingType = privateKey
        signingKey = file("../signing/sample_private_key.pem")
    }

    release {
        // The enclave needs to be built in stages.
        // Firstly, build the signing material:
        //  ./gradlew prepareForSigning -PenclaveMode="Release"
        //
        // Generate a signature from the signing material. The password for the sample external key is '12345'
        //  openssl dgst -sha256 -out signing/signature.bin -sign signing/external_signing_private.pem -keyform PEM enclave/build/enclave/Release/signing_material.bin
        //
        // Finally build the signed enclave:
        //  ./gradlew build -PenclaveMode="Release"
        //
        signingType = externalKey
        signatureDate = new Date(1970, 0, 1)
        mrsignerSignature = file("../signing/signature.bin")
        mrsignerPublicKey = file("../signing/external_signing_public.pem")
    }
}
