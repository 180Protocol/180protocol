apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'
apply plugin: 'org.jetbrains.dokka'

cordapp {
    targetPlatformVersion corda_platform_version
    minimumPlatformVersion corda_platform_version
    workflow {
        name "180 Protocol Broker Flows"
        vendor "180Protocol Pte Ltd"
        licence "GNU AFFERO GENERAL PUBLIC LICENSE, Version 3.0"
        versionId 1
    }
    signing {
        enabled false
    }
}

sourceSets {
    main {
        resources {
            srcDirs rootProject.file("config/dev"), "src/main/resources"
        }
    }
    test {
        resources {
            srcDirs rootProject.file("config/test"), "src/test/resources"
        }
    }
}

dokka {
    outputFormat = 'gfm'
    outputDirectory = "$rootDir/github-docs"
}

// Override the default (simulation) with -PenclaveMode=
def mode = findProperty("enclaveMode")?.toString()?.toLowerCase() ?: "mock"

// Create a task that can be used for generating signing materials
tasks.register("prepareForSigning") {
    it.dependsOn(":enclave:generateEnclaveSigningMaterial" + mode.capitalize())
}

dependencies {
    //only for facilitating testing locally when using protocolAggregator directly using docker compose
    //not included in maven artifact
    compile project(path: ":sampleEnclave", configuration: mode)

    //external
    compile group: 'org.apache.avro', name: 'avro', version: '1.10.2'
    compile group: "com.mashape.unirest", name: "unirest-java", version: "1.4.4"

    //conclave
    compile "com.r3.conclave:conclave-host:$conclaveVersion"
    compile "com.r3.conclave:conclave-client:$conclaveVersion"
    compile "com.r3.conclave:conclave-common:$conclaveVersion"
    compile "com.r3.conclave:conclave-mail:$conclaveVersion"

    //test
    testCompile(platform('org.junit:junit-bom:5.7.0'))
    testCompile('org.junit.jupiter:junit-jupiter')

    // Corda dependencies.
    cordapp project(":contracts")
    cordaCompile "$corda_core_release_group:corda-core:$corda_core_release_version"
    cordaRuntime "$corda_release_group:corda:$corda_release_version"
    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"
}

test {
    maxHeapSize = "1024m"
    useJUnitPlatform {
        includeEngines = ['junit-jupiter', 'junit-vintage']
        systemProperty 'junit.jupiter.execution.parallel.enabled', 'true'
        systemProperty 'enclaveMode', mode
    }
}

testlogger {
    showFullStackTraces true
}
