# use docker-compose up -d to start the network
# version 3 does not support setting memory limits for docker-compose
version: '2'
services:
  notary-node:
    image: corda/corda-zulu-java1.8-4.7:latest
    # hostnames need to be the same as in build.gradle, because they are baked into nodeInfo files
    hostname: notary-node
    mem_limit: 1g
    expose:
      - 10002 # p2p port
      - 10003 # Corda RPC port, map to a host port using ports directive if Corda shell access is required
    volumes:
      - ./protocolAggregator/build/nodes/Notary/certificates:/opt/corda/certificates
      - ./protocolAggregator/build/nodes/runnodes:/opt/corda/runnodes
      - ./protocolAggregator/build/nodes/Notary/corda.jar:/opt/corda/corda.jar
      - ./protocolAggregator/build/nodes/Notary/cordapps:/opt/corda/cordapps
      - ./protocolAggregator/build/nodes/Notary/etc:/etc/corda
      - ./protocolAggregator/build/nodes/Notary/network-parameters:/opt/corda/network-parameters
      - ./protocolAggregator/build/nodes/Notary/logs:/opt/corda/logs
      - ./protocolAggregator/build/nodes/Notary/drivers:/opt/corda/drivers
      - ./protocolAggregator/build/nodes/Notary/persistence:/opt/corda/persistence
      - ./protocolAggregator/build/nodes/Notary/additional-node-infos:/opt/corda/additional-node-infos
      # the following makes deployNode dir layout compatible with the expectations of the docker image
      - ./protocolAggregator/build/nodes/Notary/persistence.mv.db:/opt/corda/persistence/persistence.mv.db
      - ./protocolAggregator/build/nodes/Notary/persistence.trace.db:/opt/corda/persistence/persistence.trace.db
      - ./protocolAggregator/build/nodes/Notary/node.conf:/opt/corda/node.conf
    command: /opt/corda/runnodes
  host-node:
    image: corda/corda-zulu-java1.8-4.7:latest
    # hostnames need to be the same as in build.gradle, because they are baked into nodeInfo files
    hostname: host-node
    mem_limit: 1g
    expose:
      - 10004 # p2p port
      - 10005 # Corda RPC port, map to a host port using ports directive if Corda shell access is required
    volumes:
      - ./protocolAggregator/build/nodes/Host/certificates:/opt/corda/certificates
      - ./protocolAggregator/build/nodes/runnodes:/opt/corda/runnodes
      - ./protocolAggregator/build/nodes/Host/corda.jar:/opt/corda/corda.jar
      - ./protocolAggregator/build/nodes/Host/cordapps:/opt/corda/cordapps
      - ./protocolAggregator/build/nodes/Host/etc:/etc/corda
      - ./protocolAggregator/build/nodes/Host/network-parameters:/opt/corda/network-parameters
      - ./protocolAggregator/build/nodes/Host/logs:/opt/corda/logs
      - ./protocolAggregator/build/nodes/Host/drivers:/opt/corda/drivers
      - ./protocolAggregator/build/nodes/Host/persistence:/opt/corda/persistence
      - ./protocolAggregator/build/nodes/Host/additional-node-infos:/opt/corda/additional-node-infos
      # the following makes deployNode dir layout compatible with the expectations of the docker image
      - ./protocolAggregator/build/nodes/Host/persistence.mv.db:/opt/corda/persistence/persistence.mv.db
      - ./protocolAggregator/build/nodes/Host/persistence.trace.db:/opt/corda/persistence/persistence.trace.db
      - ./protocolAggregator/build/nodes/Host/node.conf:/opt/corda/node.conf
    command: /opt/corda/runnodes
  providerb-node:
    image: corda/corda-zulu-java1.8-4.7:latest
    # hostnames need to be the same as in build.gradle, because they are baked into nodeInfo files
    hostname: providerb-node
    mem_limit: 1g
    expose:
      - 10006 # p2p port
      - 10007 # Corda RPC port, map to a host port using ports directive if Corda shell access is required
    volumes:
      - ./protocolAggregator/build/nodes/ProviderB/certificates:/opt/corda/certificates
      - ./protocolAggregator/build/nodes/runnodes:/opt/corda/runnodes
      - ./protocolAggregator/build/nodes/ProviderB/corda.jar:/opt/corda/corda.jar
      - ./protocolAggregator/build/nodes/ProviderB/cordapps:/opt/corda/cordapps
      - ./protocolAggregator/build/nodes/ProviderB/etc:/etc/corda
      - ./protocolAggregator/build/nodes/ProviderB/network-parameters:/opt/corda/network-parameters
      - ./protocolAggregator/build/nodes/ProviderB/logs:/opt/corda/logs
      - ./protocolAggregator/build/nodes/ProviderB/drivers:/opt/corda/drivers
      - ./protocolAggregator/build/nodes/ProviderB/persistence:/opt/corda/persistence
      - ./protocolAggregator/build/nodes/ProviderB/additional-node-infos:/opt/corda/additional-node-infos
      # the following makes deployNode dir layout compatible with the expectations of the docker image
      - ./protocolAggregator/build/nodes/ProviderB/persistence.mv.db:/opt/corda/persistence/persistence.mv.db
      - ./protocolAggregator/build/nodes/ProviderB/persistence.trace.db:/opt/corda/persistence/persistence.trace.db
      - ./protocolAggregator/build/nodes/ProviderB/node.conf:/opt/corda/node.conf
    command: /opt/corda/runnodes
  providerd-node:
    image: corda/corda-zulu-java1.8-4.7:latest
    # hostnames need to be the same as in build.gradle, because they are baked into nodeInfo files
    hostname: providerd-node
    mem_limit: 1g
    expose:
      - 10011 # p2p port
      - 10012 # Corda RPC port, map to a host port using ports directive if Corda shell access is required
    volumes:
      - ./protocolAggregator/build/nodes/ProviderD/certificates:/opt/corda/certificates
      - ./protocolAggregator/build/nodes/runnodes:/opt/corda/runnodes
      - ./protocolAggregator/build/nodes/ProviderD/corda.jar:/opt/corda/corda.jar
      - ./protocolAggregator/build/nodes/ProviderD/cordapps:/opt/corda/cordapps
      - ./protocolAggregator/build/nodes/ProviderD/etc:/etc/corda
      - ./protocolAggregator/build/nodes/ProviderD/network-parameters:/opt/corda/network-parameters
      - ./protocolAggregator/build/nodes/ProviderD/logs:/opt/corda/logs
      - ./protocolAggregator/build/nodes/ProviderD/drivers:/opt/corda/drivers
      - ./protocolAggregator/build/nodes/ProviderD/persistence:/opt/corda/persistence
      - ./protocolAggregator/build/nodes/ProviderD/additional-node-infos:/opt/corda/additional-node-infos
      # the following makes deployNode dir layout compatible with the expectations of the docker image
      - ./protocolAggregator/build/nodes/ProviderD/persistence.mv.db:/opt/corda/persistence/persistence.mv.db
      - ./protocolAggregator/build/nodes/ProviderD/persistence.trace.db:/opt/corda/persistence/persistence.trace.db
      - ./protocolAggregator/build/nodes/ProviderD/node.conf:/opt/corda/node.conf
    command: /opt/corda/runnodes
  consumerc-node:
    image: corda/corda-zulu-java1.8-4.7:latest
    # hostnames need to be the same as in build.gradle, because they are baked into nodeInfo files
    hostname: consumerc-node
    mem_limit: 1g
    expose:
      - 10008 # p2p port
      - 10009 # Corda RPC port, map to a host port using ports directive if Corda shell access is required
    volumes:
      - ./protocolAggregator/build/nodes/ConsumerC/certificates:/opt/corda/certificates
      - ./protocolAggregator/build/nodes/runnodes:/opt/corda/runnodes
      - ./protocolAggregator/build/nodes/ConsumerC/corda.jar:/opt/corda/corda.jar
      - ./protocolAggregator/build/nodes/ConsumerC/cordapps:/opt/corda/cordapps
      - ./protocolAggregator/build/nodes/ConsumerC/etc:/etc/corda
      - ./protocolAggregator/build/nodes/ConsumerC/network-parameters:/opt/corda/network-parameters
      - ./protocolAggregator/build/nodes/ConsumerC/logs:/opt/corda/logs
      - ./protocolAggregator/build/nodes/ConsumerC/drivers:/opt/corda/drivers
      - ./protocolAggregator/build/nodes/ConsumerC/persistence:/opt/corda/persistence
      - ./protocolAggregator/build/nodes/ConsumerC/additional-node-infos:/opt/corda/additional-node-infos
      # the following makes deployNode dir layout compatible with the expectations of the docker image
      - ./protocolAggregator/build/nodes/ConsumerC/persistence.mv.db:/opt/corda/persistence/persistence.mv.db
      - ./protocolAggregator/build/nodes/ConsumerC/persistence.trace.db:/opt/corda/persistence/persistence.trace.db
      - ./protocolAggregator/build/nodes/ConsumerC/node.conf:/opt/corda/node.conf
    command: /opt/corda/runnodes
    ports:
      - "5005:5005"
